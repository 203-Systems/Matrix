   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"usb_init.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.USB_Init,"ax",%progbits
  19              		.align	1
  20              		.global	USB_Init
  21              		.thumb
  22              		.thumb_func
  24              	USB_Init:
  25              	.LFB0:
  26              		.file 1 "usb_lib/usb_init.c"
   1:usb_lib/usb_init.c **** /******************** (C) COPYRIGHT 2008 STMicroelectronics ********************
   2:usb_lib/usb_init.c **** * File Name          : usb_init.c
   3:usb_lib/usb_init.c **** * Author             : MCD Application Team
   4:usb_lib/usb_init.c **** * Version            : V2.2.1
   5:usb_lib/usb_init.c **** * Date               : 09/22/2008
   6:usb_lib/usb_init.c **** * Description        : Initialization routines & global variables
   7:usb_lib/usb_init.c **** ********************************************************************************
   8:usb_lib/usb_init.c **** * THE PRESENT FIRMWARE WHICH IS FOR GUIDANCE ONLY AIMS AT PROVIDING CUSTOMERS
   9:usb_lib/usb_init.c **** * WITH CODING INFORMATION REGARDING THEIR PRODUCTS IN ORDER FOR THEM TO SAVE TIME.
  10:usb_lib/usb_init.c **** * AS A RESULT, STMICROELECTRONICS SHALL NOT BE HELD LIABLE FOR ANY DIRECT,
  11:usb_lib/usb_init.c **** * INDIRECT OR CONSEQUENTIAL DAMAGES WITH RESPECT TO ANY CLAIMS ARISING FROM THE
  12:usb_lib/usb_init.c **** * CONTENT OF SUCH FIRMWARE AND/OR THE USE MADE BY CUSTOMERS OF THE CODING
  13:usb_lib/usb_init.c **** * INFORMATION CONTAINED HEREIN IN CONNECTION WITH THEIR PRODUCTS.
  14:usb_lib/usb_init.c **** *******************************************************************************/
  15:usb_lib/usb_init.c **** 
  16:usb_lib/usb_init.c **** /* Includes ------------------------------------------------------------------*/
  17:usb_lib/usb_init.c **** #include "usb_lib.h"
  18:usb_lib/usb_init.c **** 
  19:usb_lib/usb_init.c **** /* Private typedef -----------------------------------------------------------*/
  20:usb_lib/usb_init.c **** /* Private define ------------------------------------------------------------*/
  21:usb_lib/usb_init.c **** /* Private macro -------------------------------------------------------------*/
  22:usb_lib/usb_init.c **** /* Private variables ---------------------------------------------------------*/
  23:usb_lib/usb_init.c **** /*  The number of current endpoint, it will be used to specify an endpoint */
  24:usb_lib/usb_init.c ****  u8	EPindex;
  25:usb_lib/usb_init.c **** /*  The number of current device, it is an index to the Device_Table */
  26:usb_lib/usb_init.c **** /* u8	Device_no; */
  27:usb_lib/usb_init.c **** /*  Points to the DEVICE_INFO structure of current device */
  28:usb_lib/usb_init.c **** /*  The purpose of this register is to speed up the execution */
  29:usb_lib/usb_init.c **** DEVICE_INFO *pInformation;
  30:usb_lib/usb_init.c **** /*  Points to the DEVICE_PROP structure of current device */
  31:usb_lib/usb_init.c **** /*  The purpose of this register is to speed up the execution */
  32:usb_lib/usb_init.c **** DEVICE_PROP *pProperty;
  33:usb_lib/usb_init.c **** /*  Temporary save the state of Rx & Tx status. */
  34:usb_lib/usb_init.c **** /*  Whenever the Rx or Tx state is changed, its value is saved */
  35:usb_lib/usb_init.c **** /*  in this variable first and will be set to the EPRB or EPRA */
  36:usb_lib/usb_init.c **** /*  at the end of interrupt process */
  37:usb_lib/usb_init.c **** u16	SaveState ;
  38:usb_lib/usb_init.c **** u16  wInterrupt_Mask;
  39:usb_lib/usb_init.c **** DEVICE_INFO	Device_Info;
  40:usb_lib/usb_init.c **** USER_STANDARD_REQUESTS  *pUser_Standard_Requests;
  41:usb_lib/usb_init.c **** 
  42:usb_lib/usb_init.c **** /* Extern variables ----------------------------------------------------------*/
  43:usb_lib/usb_init.c **** /* Private function prototypes -----------------------------------------------*/
  44:usb_lib/usb_init.c **** /* Private functions ---------------------------------------------------------*/
  45:usb_lib/usb_init.c **** 
  46:usb_lib/usb_init.c **** /*******************************************************************************
  47:usb_lib/usb_init.c **** * Function Name  : USB_Init
  48:usb_lib/usb_init.c **** * Description    : USB system initialization
  49:usb_lib/usb_init.c **** * Input          : None.
  50:usb_lib/usb_init.c **** * Output         : None.
  51:usb_lib/usb_init.c **** * Return         : None.
  52:usb_lib/usb_init.c **** *******************************************************************************/
  53:usb_lib/usb_init.c **** void USB_Init(void)
  54:usb_lib/usb_init.c **** {
  27              		.loc 1 54 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 08B5     		push	{r3, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 3, -8
  34              		.cfi_offset 14, -4
  55:usb_lib/usb_init.c ****   pInformation = &Device_Info;
  35              		.loc 1 55 0
  36 0002 074A     		ldr	r2, .L2
  37 0004 074B     		ldr	r3, .L2+4
  56:usb_lib/usb_init.c ****   pInformation->ControlState = 2;
  57:usb_lib/usb_init.c ****   pProperty = &Device_Property;
  58:usb_lib/usb_init.c ****   pUser_Standard_Requests = &User_Standard_Requests;
  38              		.loc 1 58 0
  39 0006 0849     		ldr	r1, .L2+8
  55:usb_lib/usb_init.c ****   pInformation = &Device_Info;
  40              		.loc 1 55 0
  41 0008 1360     		str	r3, [r2]
  56:usb_lib/usb_init.c ****   pInformation->ControlState = 2;
  42              		.loc 1 56 0
  43 000a 0222     		movs	r2, #2
  44 000c 1A72     		strb	r2, [r3, #8]
  57:usb_lib/usb_init.c ****   pProperty = &Device_Property;
  45              		.loc 1 57 0
  46 000e 074B     		ldr	r3, .L2+12
  47 0010 074A     		ldr	r2, .L2+16
  48 0012 1360     		str	r3, [r2]
  49              		.loc 1 58 0
  50 0014 074A     		ldr	r2, .L2+20
  59:usb_lib/usb_init.c ****   /* Initialize devices one by one */
  60:usb_lib/usb_init.c **** 
  61:usb_lib/usb_init.c ****   pProperty->Init();
  51              		.loc 1 61 0
  52 0016 1B68     		ldr	r3, [r3]
  58:usb_lib/usb_init.c ****   pUser_Standard_Requests = &User_Standard_Requests;
  53              		.loc 1 58 0
  54 0018 1160     		str	r1, [r2]
  55              		.loc 1 61 0
  56 001a 9847     		blx	r3
  57              	.LVL0:
  58 001c 08BD     		pop	{r3, pc}
  59              	.L3:
  60 001e 00BF     		.align	2
  61              	.L2:
  62 0020 00000000 		.word	pInformation
  63 0024 00000000 		.word	Device_Info
  64 0028 00000000 		.word	User_Standard_Requests
  65 002c 00000000 		.word	Device_Property
  66 0030 00000000 		.word	pProperty
  67 0034 00000000 		.word	pUser_Standard_Requests
  68              		.cfi_endproc
  69              	.LFE0:
  71              		.comm	pUser_Standard_Requests,4,4
  72              		.comm	Device_Info,28,4
  73              		.comm	wInterrupt_Mask,2,2
  74              		.comm	SaveState,2,2
  75              		.comm	pProperty,4,4
  76              		.comm	pInformation,4,4
  77              		.comm	EPindex,1,1
  78              		.text
  79              	.Letext0:
  80              		.file 2 "usb_lib/usb_type.h"
  81              		.file 3 "usb_lib/usb_core.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 usb_init.c
     /tmp/ccep9lJm.s:19     .text.USB_Init:0000000000000000 $t
     /tmp/ccep9lJm.s:24     .text.USB_Init:0000000000000000 USB_Init
     /tmp/ccep9lJm.s:62     .text.USB_Init:0000000000000020 $d
                            *COM*:0000000000000004 pInformation
                            *COM*:000000000000001c Device_Info
                            *COM*:0000000000000004 pProperty
                            *COM*:0000000000000004 pUser_Standard_Requests
                            *COM*:0000000000000002 wInterrupt_Mask
                            *COM*:0000000000000002 SaveState
                            *COM*:0000000000000001 EPindex
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
User_Standard_Requests
Device_Property
